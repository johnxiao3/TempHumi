C51 COMPILER V9.00   SSD1306                                                               10/28/2017 20:59:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SSD1306
OBJECT MODULE PLACED IN ssd1306.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ssd1306.c OPTIMIZE(6,SPEED) DEBUG OBJECTEXTEND

line level    source

   1          #include "Fx2.h"
   2          #include "fx2regs.h"
   3          
   4          #include "stdlib.h"
   5          #include "string.h"
   6          
   7          #include "iic_comm.h"
   8          
   9          #include "ssd1306.h"
  10                  
  11          const code au8Font8x8[]= {
  12              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,       // ASCII -  32
  13              0x00,0x00,0x00,0x5F,0x5F,0x00,0x00,0x00,       // ASCII -  33
  14              0x00,0x00,0x03,0x07,0x00,0x07,0x03,0x00,       // ASCII -  34
  15              0x00,0x10,0x74,0x1C,0x77,0x1C,0x17,0x04,       // ASCII -  35
  16              0x00,0x24,0x2E,0x2A,0x7F,0x2A,0x3A,0x10,       // ASCII -  36
  17              0x00,0x4C,0x6A,0x76,0x1A,0x6A,0x56,0x33,       // ASCII -  37
  18              0x00,0x30,0x7A,0x4F,0x5D,0x37,0x7A,0x48,       // ASCII -  38
  19              0x00,0x00,0x04,0x07,0x03,0x00,0x00,0x00,       // ASCII -  39
  20              0x00,0x00,0x00,0x1C,0x3E,0x63,0x41,0x00,       // ASCII -  40
  21              0x00,0x00,0x41,0x63,0x3E,0x1C,0x00,0x00,       // ASCII -  41
  22              0x00,0x08,0x2A,0x3E,0x1C,0x3E,0x2A,0x08,       // ASCII -  42
  23              0x00,0x08,0x08,0x3E,0x3E,0x08,0x08,0x00,       // ASCII -  43
  24              0x00,0x00,0x00,0x60,0x60,0x00,0x00,0x00,       // ASCII -  44
  25              0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,       // ASCII -  45
  26              0x00,0x00,0x00,0x60,0x60,0x00,0x00,0x00,       // ASCII -  46
  27              0x00,0x60,0x30,0x18,0x0C,0x06,0x03,0x01,       // ASCII -  47
  28              0x00,0x1C,0x3E,0x61,0x43,0x3E,0x1C,0x00,       // ASCII -  48
  29              0x00,0x00,0x44,0x7F,0x7F,0x40,0x00,0x00,       // ASCII -  49
  30              0x00,0x46,0x67,0x71,0x59,0x4F,0x66,0x00,       // ASCII -  50
  31              0x00,0x22,0x63,0x49,0x4D,0x7F,0x32,0x00,       // ASCII -  51
  32              0x00,0x18,0x1C,0x52,0x7F,0x7F,0x50,0x00,       // ASCII -  52
  33              0x00,0x2F,0x6F,0x45,0x45,0x7D,0x39,0x00,       // ASCII -  53
  34              0x00,0x3C,0x7E,0x4B,0x49,0x79,0x30,0x00,       // ASCII -  54
  35              0x00,0x07,0x43,0x71,0x7D,0x0F,0x03,0x00,       // ASCII -  55
  36              0x00,0x36,0x7F,0x4D,0x59,0x7F,0x36,0x00,       // ASCII -  56
  37              0x00,0x06,0x4F,0x49,0x69,0x3F,0x1E,0x00,       // ASCII -  57
  38              0x00,0x00,0x00,0x66,0x66,0x00,0x00,0x00,       // ASCII -  58
  39              0x00,0x00,0x00,0x66,0x66,0x00,0x00,0x00,       // ASCII -  59
  40              0x00,0x00,0x08,0x1C,0x36,0x63,0x41,0x00,       // ASCII -  60
  41              0x00,0x14,0x14,0x14,0x14,0x14,0x14,0x00,       // ASCII -  61
  42              0x00,0x00,0x41,0x63,0x36,0x1C,0x08,0x00,       // ASCII -  62
  43              0x00,0x02,0x07,0x51,0x59,0x0F,0x06,0x00,       // ASCII -  63
  44              0x00,0x3E,0x41,0x5D,0x55,0x5D,0x51,0x1E,       // ASCII -  64
  45              0x00,0x40,0x70,0x1D,0x17,0x1F,0x78,0x60,       // ASCII -  65
  46              0x00,0x41,0x7F,0x7F,0x49,0x4F,0x7E,0x30,       // ASCII -  66
  47              0x00,0x1C,0x3E,0x63,0x41,0x41,0x42,0x27,       // ASCII -  67
  48              0x00,0x41,0x7F,0x7F,0x41,0x63,0x3E,0x1C,       // ASCII -  68
  49              0x00,0x41,0x7F,0x7F,0x49,0x5D,0x41,0x63,       // ASCII -  69
  50              0x00,0x41,0x7F,0x7F,0x49,0x1D,0x01,0x03,       // ASCII -  70
  51              0x00,0x1C,0x3E,0x63,0x41,0x51,0x72,0x77,       // ASCII -  71
  52              0x00,0x7F,0x7F,0x08,0x08,0x7F,0x7F,0x00,       // ASCII -  72
  53              0x00,0x00,0x41,0x7F,0x7F,0x41,0x00,0x00,       // ASCII -  73
  54              0x00,0x30,0x70,0x41,0x41,0x7F,0x3F,0x01,       // ASCII -  74
  55              0x00,0x7F,0x7F,0x08,0x1C,0x77,0x63,0x41,       // ASCII -  75
C51 COMPILER V9.00   SSD1306                                                               10/28/2017 20:59:31 PAGE 2   

  56              0x00,0x41,0x7F,0x7F,0x41,0x40,0x60,0x70,       // ASCII -  76
  57              0x00,0x7F,0x7E,0x0C,0x18,0x0C,0x7E,0x7F,       // ASCII -  77
  58              0x00,0x7F,0x7E,0x0C,0x18,0x30,0x7F,0x7F,       // ASCII -  78
  59              0x00,0x1C,0x3E,0x63,0x41,0x63,0x3E,0x1C,       // ASCII -  79
  60              0x00,0x41,0x7F,0x7F,0x49,0x09,0x0F,0x06,       // ASCII -  80
  61              0x00,0x1C,0x3E,0x63,0x51,0x63,0x3E,0x1C,       // ASCII -  81
  62              0x00,0x7F,0x7F,0x09,0x19,0x7F,0x66,0x40,       // ASCII -  82
  63              0x00,0x66,0x6F,0x4D,0x59,0x7B,0x33,0x00,       // ASCII -  83
  64              0x00,0x03,0x41,0x7F,0x7F,0x41,0x03,0x00,       // ASCII -  84
  65              0x00,0x3F,0x7F,0x40,0x40,0x40,0x7F,0x3F,       // ASCII -  85
  66              0x00,0x03,0x0F,0x3D,0x70,0x1D,0x07,0x01,       // ASCII -  86
  67              0x00,0x0F,0x7F,0x30,0x1C,0x30,0x7F,0x0F,       // ASCII -  87
  68              0x00,0x63,0x77,0x1C,0x1C,0x77,0x63,0x00,       // ASCII -  88
  69              0x01,0x03,0x47,0x7C,0x78,0x47,0x03,0x01,       // ASCII -  89
  70              0x00,0x67,0x73,0x59,0x4D,0x67,0x73,0x00,       // ASCII -  90
  71              0x00,0x00,0x00,0x7F,0x7F,0x41,0x41,0x00,       // ASCII -  91
  72              0x00,0x01,0x03,0x06,0x0C,0x18,0x30,0x60,       // ASCII -  92
  73              0x00,0x00,0x41,0x41,0x7F,0x7F,0x00,0x00,       // ASCII -  93
  74              0x00,0x00,0x04,0x06,0x03,0x06,0x04,0x00,       // ASCII -  94
  75              0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,       // ASCII -  95
  76              0x00,0x00,0x01,0x03,0x06,0x04,0x00,0x00,       // ASCII -  96
  77              0x00,0x68,0x6C,0x54,0x54,0x3C,0x78,0x40,       // ASCII -  97
  78              0x00,0x41,0x7F,0x3F,0x6C,0x44,0x7C,0x38,       // ASCII -  98
  79              0x00,0x38,0x7C,0x44,0x44,0x6C,0x2C,0x00,       // ASCII -  99
  80              0x00,0x38,0x7C,0x44,0x49,0x3F,0x7F,0x40,       // ASCII - 100
  81              0x00,0x38,0x7C,0x54,0x54,0x5C,0x58,0x00,       // ASCII - 101
  82              0x00,0x00,0x48,0x7E,0x7F,0x49,0x0B,0x02,       // ASCII - 102
  83              0x00,0x48,0x7C,0x34,0x34,0x2C,0x68,0x44,       // ASCII - 103
  84              0x00,0x41,0x7F,0x7F,0x08,0x04,0x7C,0x78,       // ASCII - 104
  85              0x00,0x00,0x44,0x7D,0x7D,0x40,0x00,0x00,       // ASCII - 105
  86              0x00,0x60,0x60,0x04,0x7D,0x7D,0x00,0x00,       // ASCII - 106
  87              0x00,0x41,0x7F,0x7F,0x10,0x78,0x6C,0x44,       // ASCII - 107
  88              0x00,0x00,0x41,0x7F,0x7F,0x40,0x00,0x00,       // ASCII - 108
  89              0x00,0x7C,0x7C,0x0C,0x78,0x0C,0x7C,0x78,       // ASCII - 109
  90              0x00,0x44,0x7C,0x7C,0x08,0x04,0x7C,0x78,       // ASCII - 110
  91              0x00,0x38,0x7C,0x44,0x44,0x7C,0x38,0x00,       // ASCII - 111
  92              0x00,0x04,0x7C,0x78,0x24,0x24,0x3C,0x18,       // ASCII - 112
  93              0x00,0x18,0x3C,0x24,0x24,0x78,0x7C,0x00,       // ASCII - 113
  94              0x00,0x44,0x7C,0x78,0x4C,0x04,0x1C,0x18,       // ASCII - 114
  95              0x00,0x48,0x5C,0x5C,0x74,0x74,0x24,0x00,       // ASCII - 115
  96              0x00,0x00,0x04,0x3E,0x7F,0x44,0x24,0x00,       // ASCII - 116
  97              0x00,0x3C,0x7C,0x40,0x40,0x3C,0x7C,0x40,       // ASCII - 117
  98              0x00,0x04,0x1C,0x3C,0x60,0x30,0x1C,0x04,       // ASCII - 118
  99              0x00,0x1C,0x7C,0x30,0x1C,0x30,0x7C,0x1C,       // ASCII - 119
 100              0x00,0x44,0x6C,0x3C,0x10,0x78,0x6C,0x44,       // ASCII - 120
 101              0x00,0x44,0x4C,0x1C,0x70,0x64,0x1C,0x0C,       // ASCII - 121
 102              0x00,0x4C,0x64,0x74,0x5C,0x4C,0x64,0x00,       // ASCII - 122
 103              0x00,0x08,0x08,0x3E,0x77,0x41,0x41,0x00,       // ASCII - 123
 104              0x00,0x00,0x00,0x7F,0x7F,0x00,0x00,0x00,       // ASCII - 124
 105              0x00,0x41,0x41,0x77,0x3E,0x08,0x08,0x00,       // ASCII - 125
 106              0x00,0x02,0x01,0x01,0x03,0x02,0x02,0x01,       // ASCII - 126
 107              0x00,0x60,0x78,0x4E,0x47,0x5E,0x78,0x60,       // ASCII - 127
 108              0x00,0x1C,0x3E,0x23,0x41,0x41,0x42,0x27,       // ASCII - 128
 109              0x00,0x3D,0x7D,0x40,0x41,0x3D,0x7C,0x40,       // ASCII - 129
 110          };                      
 111          
 112                          
 113          unsigned char* m_pFramebuffer;
 114          
 115          void writeCommand(unsigned char cmd)
 116          {
 117   1              I2CStart();
C51 COMPILER V9.00   SSD1306                                                               10/28/2017 20:59:31 PAGE 3   

 118   1              I2CSend(0x78);  //Slave address,SA0=0
 119   1              I2CSend(0x00);  //write command
 120   1              I2CSend(cmd);
 121   1              I2CStop();
 122   1      }          
 123          
 124          void writeData(unsigned char cmd)
 125          {
 126   1              I2CStart();
 127   1              I2CSend(0x78);  //Slave address,SA0=0
 128   1              I2CSend(0x40);  //write data
 129   1              I2CSend(cmd);
 130   1              I2CStop();
 131   1      }
 132          void ssd1306_initalize()
 133          {
 134   1      
 135   1              //m_pFramebuffer = (unsigned char*)malloc(SSD1306_FBSIZE);
 136   1              //if(m_pFramebuffer == 0){
 137   1              //      return;
 138   1              //}
 139   1              //memset(m_pFramebuffer,0,SSD1306_FBSIZE);//clear it.
 140   1              //write command to the screen registers.
 141   1              writeCommand(SSD1306_CMD_DISPLAY_OFF);//0xAE
 142   1              writeCommand(0xD5);//Set Memory Addressing Mode
 143   1              writeCommand(0x80);//00,Horizontal Addressing Mode;01,Vertical Addressing Mode;10,Page Addressing Mode (R
             -ESET);11,Invalid
 144   1              writeCommand(0xA8);//Set Page Start Address for Page Addressing Mode,0-7
 145   1              writeCommand(0x3F);//--set segment re-map 0 to 127
 146   1              writeCommand(0xD3);//--set multiplex ratio(1 to 64)
 147   1              writeCommand(0x00);//
 148   1              writeCommand(0x40);//0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 149   1              writeCommand(0x8D);//-set display offset
 150   1              writeCommand(0x14);//-not offset
 151   1              writeCommand(0x20);//--set display clock divide ratio/oscillator frequency
 152   1              writeCommand(0x00);//--set divide ratio
 153   1              writeCommand(0xA1);//--set pre-charge period
 154   1              writeCommand(0xC8);//
 155   1              writeCommand(0xDA);//--set com pins hardware configuration
 156   1              writeCommand(0x12);//--set vcomh
 157   1              writeCommand(0x81);//0x20,0.77xVcc
 158   1              writeCommand(0xCF);//--set DC-DC enable
 159   1              writeCommand(0xD9);
 160   1              writeCommand(0xF1);
 161   1              writeCommand(0xDB);
 162   1              writeCommand(0x40);
 163   1              writeCommand(0xA4);
 164   1              writeCommand(0xA6);
 165   1              writeCommand(SSD1306_CMD_DISPLAY_ON);//--0XAF
 166   1      
 167   1              //delay(10);//wait for the screen loaded.
 168   1      }
 169          
 170          void ssd1306_clear()
 171          {
 172   1              int i;
 173   1      
 174   1              writeCommand(SSD1306_SETLOWCOLUMN | 0x0);  // low col = 0
 175   1          writeCommand(SSD1306_SETHIGHCOLUMN | 0x0);  // hi col = 0
 176   1          writeCommand(SSD1306_SETSTARTLINE | 0x0); // line #0
 177   1              writeCommand(0xb0);
 178   1              
C51 COMPILER V9.00   SSD1306                                                               10/28/2017 20:59:31 PAGE 4   

 179   1          for (i=0; i<1024; i++) 
 180   1          {
 181   2            writeData(0x00);
 182   2          }
 183   1      }
 184                           
 185          void ssd1306_printchar(unsigned char dat)
 186          {
 187   1              unsigned char i;
 188   1              for (i=0; i<8; i++) 
 189   1          {
 190   2            writeData(au8Font8x8[(dat-32)*8+i]);
 191   2          }
 192   1      }
 193          
 194          void ssd1306_draw()
 195          {
 196   1              int i,j;
 197   1      
 198   1              writeCommand(SSD1306_SETLOWCOLUMN | 0x0);  // low col = 0
 199   1          writeCommand(SSD1306_SETHIGHCOLUMN | 0x0);  // hi col = 0
 200   1          writeCommand(SSD1306_SETSTARTLINE | 0x0); // line #0
 201   1      
 202   1              for (i=0;i<1024;i++) ;
 203   1              //writeData(~nBitmapDot[i]);      
 204   1      }
*** WARNING C280 IN LINE 196 OF SSD1306.C: 'j': unreferenced local variable
 205          
 206          void ssd1306_printf(unsigned char dat[])
 207          {
 208   1              int i=0;
 209   1              int j=0;
 210   1      
 211   1              writeCommand(SSD1306_SETLOWCOLUMN | 0x0);  // low col = 0
 212   1          writeCommand(SSD1306_SETHIGHCOLUMN | 0x0);  // hi col = 0
 213   1          writeCommand(SSD1306_SETSTARTLINE | 0x0); // line #0
 214   1              writeCommand(0xb0);
 215   1      
 216   1              for (i=0;i< strlen(dat);i++)
 217   1              {
 218   2                      if ((dat[i]==0x0d) ||(dat[i]==0x0a) || (dat[i]==0x0b))
 219   2                              for (j=0;j<8;j++)
 220   2                                      writeData(au8Font8x8[j]);
 221   2                      else    
 222   2                              for (j=0;j<8;j++)
 223   2                                      writeData(au8Font8x8[(dat[i]-32)*8+j]); 
 224   2              }
 225   1              for (i=0;i<1024-8*strlen(dat);i++)
 226   1                      writeData(0x00); 
 227   1      }
 228          
 229          void ssd1306_printf0()
 230          {
 231   1              writeCommand(SSD1306_SETLOWCOLUMN | 0x0);  // low col = 0
 232   1          writeCommand(SSD1306_SETHIGHCOLUMN | 0x0);  // hi col = 0
 233   1          writeCommand(SSD1306_SETSTARTLINE | 0x0); // line #0
 234   1              writeCommand(0xb0);
 235   1      }
 236          void ssd1306_printf1(unsigned char dat[])
 237          {
 238   1              int i=0;
 239   1              int j=0;
C51 COMPILER V9.00   SSD1306                                                               10/28/2017 20:59:31 PAGE 5   

 240   1      
 241   1              for (i=0;i< strlen(dat);i++)
 242   1              {
 243   2                      if ((dat[i]==0x0d) ||(dat[i]==0x0a) || (dat[i]==0x0b))
 244   2                              for (j=0;j<8;j++)
 245   2                                      writeData(au8Font8x8[j]);
 246   2                      else    
 247   2                              for (j=0;j<8;j++)
 248   2                                      writeData(au8Font8x8[(dat[i]-32)*8+j]); 
 249   2              } 
 250   1      }
*** WARNING C316 IN LINE 250 OF ssd1306.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    850    ----
   CONSTANT SIZE    =   1568    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      22
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
