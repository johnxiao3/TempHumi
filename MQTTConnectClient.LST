C51 COMPILER V9.00   MQTTCONNECTCLIENT                                                     06/10/2017 10:49:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MQTTCONNECTCLIENT
OBJECT MODULE PLACED IN MQTTConnectClient.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE MQTTConnectClient.c OPTIMIZE(6,SPEED) DEBUG OBJECTEXTEND

line level    source

   1                                                                                                                     /*******************************************************************************
   2           * Copyright (c) 2014 IBM Corp.
   3           *
   4           * All rights reserved. This program and the accompanying materials
   5           * are made available under the terms of the Eclipse Public License v1.0
   6           * and Eclipse Distribution License v1.0 which accompany this distribution.
   7           *
   8           * The Eclipse Public License is available at
   9           *    http://www.eclipse.org/legal/epl-v10.html
  10           * and the Eclipse Distribution License is available at
  11           *   http://www.eclipse.org/org/documents/edl-v10.php.
  12           *
  13           * Contributors:
  14           *    Ian Craggs - initial API and implementation and/or initial documentation
  15           *******************************************************************************/
  16          
  17          #include "MQTTPacket.h"
  18          #include "MQTTConnect.h"
  19          #include "ESP8266.h"
  20          
  21          #include <string.h>
  22          
  23          /**
  24            * Determines the length of the MQTT connect packet that would be produced using the supplied connect opt
             -ions.
  25            * @param options the options to be used to build the connect packet
  26            * @return the length of buffer needed to contain the serialized version of the packet
  27            */
  28             
  29          int MQTTSerialize_connectLength(MQTTPacket_connectData* options)
  30          {
  31   1              int len = 0;
  32   1      
  33   1      
  34   1              if (options->MQTTVersion == 3)
  35   1                      len = 12; 
  36   1              else if (options->MQTTVersion == 4)
  37   1                      len = 10;
  38   1      
  39   1              len += MQTTstrlen(options->clientID)+2;
  40   1              if (options->willFlag)
  41   1                      len += MQTTstrlen(options->will.topicName)+2 + MQTTstrlen(options->will.message)+2;
  42   1              if (options->username.cstring || options->username.lenstring.Data)
  43   1                      len += MQTTstrlen(options->username)+2;
  44   1              if (options->password.cstring || options->password.lenstring.Data)
  45   1                      len += MQTTstrlen(options->password)+2;
  46   1      
  47   1              return len;
  48   1      }       
  49          
  50          
  51                                            
  52          int MQTTSerialize_connect(unsigned char* buf, int buflen, MQTTPacket_connectData* options)
  53          {
  54   1              unsigned char *ptr = buf;  
C51 COMPILER V9.00   MQTTCONNECTCLIENT                                                     06/10/2017 10:49:03 PAGE 2   

  55   1              MQTTHeader header = {0};
  56   1              MQTTConnectFlags flags = {0};
  57   1              int len = 0;
  58   1              int rc = -1;
  59   1      
  60   1              header.byte = 0;
  61   1              header.bits.type = CONNECT_MSG;
  62   1              Serial0_SendChar(header.byte); 
  63   1         
  64   1              ptr += MQTTPacket_encode(ptr, len); 
  65   1      
  66   1              if (options->MQTTVersion == 4)
  67   1              {
  68   2                      Serial0_SendString("MQTT");
  69   2                      Serial0_SendChar((char) 4);
  70   2              }
  71   1              else
  72   1              {
  73   2                      Serial0_SendString("MQIsdp");
  74   2                      Serial0_SendChar((char) 3);
  75   2              }
  76   1      
  77   1              flags.all = 0;
  78   1              flags.bits.cleansession = options->cleansession;
  79   1              flags.bits.will = (options->willFlag) ? 1 : 0;
  80   1              if (flags.bits.will)
  81   1              {
  82   2                      flags.bits.willQoS = options->will.qos;
  83   2                      flags.bits.willRetain = options->will.retained;
  84   2              }
  85   1      
  86   1              if (options->username.cstring || options->username.lenstring.Data)
  87   1                      flags.bits.username = 1;
  88   1              if (options->password.cstring || options->password.lenstring.Data)
  89   1                      flags.bits.password = 1;
  90   1      
  91   1              Serial0_SendChar(flags.all);
  92   1              Serial0_SendChar(options->keepAliveInterval);
  93   1              Serial0_SendString1(options->clientID.lenstring.Data);
  94   1              if (options->willFlag)
  95   1              {
  96   2                      Serial0_SendString1(options->will.topicName.lenstring.Data);
  97   2                      Serial0_SendString1( options->will.message.lenstring.Data);
  98   2              }
  99   1              if (flags.bits.username)
 100   1                      Serial0_SendString1( options->username.lenstring.Data);
 101   1              if (flags.bits.password)
 102   1                      Serial0_SendString1(options->password.lenstring.Data);
 103   1      
 104   1              rc = ptr - buf;
 105   1      
 106   1              exit:
 107   1              return rc;
 108   1      }                                         
*** WARNING C280 IN LINE 52 OF MQTTCONNECTCLIENT.C: 'buflen': unreferenced local variable
*** WARNING C280 IN LINE 106 OF MQTTCONNECTCLIENT.C: 'exit': unreferenced label
*** WARNING C316 IN LINE 108 OF MQTTConnectClient.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    892    ----
   CONSTANT SIZE    =     16    ----
C51 COMPILER V9.00   MQTTCONNECTCLIENT                                                     06/10/2017 10:49:03 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
